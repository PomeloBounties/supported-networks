on:
  push:
    branches:
      - main
  workflow_dispatch:

name: Validate, generate and publish registry

jobs:
  upload-registry:
    name: Upload to Cloudflare Pages
    if: github.actor != 'github-actions[bot]'   # don't run on release commits
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --no-save

      - name: Validate schema
        run: bun validate:schema

      - name: Generate registry types
        run: bun generate:types

      - name: Validate logic
        run: bun validate:networks

      - name: Generate registry
        run: bun generate:public

      - name: Format
        run: bun format

      - name: Get version
        id: get_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "REGISTRY_VERSION=v${VERSION}" >> $GITHUB_ENV

      - name: Check if tag exists
        id: check_tag
        run: |
          TAG="${{ env.REGISTRY_VERSION }}"
          if git fetch --tags && git tag -l | grep -q "$TAG"; then
            echo "Error: Registry $TAG already exists. Bump up the version in package.json to publish"
            exit 1
          fi

      - name: Publish
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy public --project-name=graphregistry

      - name: Commit changes
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

          git add .
          git commit -m "generate registry ${{ env.REGISTRY_VERSION }}" || echo "No changes to commit"
          git push origin main

      - name: Create tag and publish release
        run: |
          TAG="${{ env.REGISTRY_VERSION }}"
          git tag "$TAG"
          git push origin "$TAG"

          # Extract major, minor, and patch parts of the version
          VERSION="${TAG#v}"                # Strip the "v" prefix
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

          # Build the URLs
          URL1="${{ env.REGISTRY_ROOT_URL }}/TheGraphNetworksRegistry.json"
          URL2="${{ env.REGISTRY_ROOT_URL }}/TheGraphNetworksRegistry_v${MAJOR}_x_x.json"
          URL3="${{ env.REGISTRY_ROOT_URL }}/TheGraphNetworksRegistry_v${MAJOR}_${MINOR}_x.json"
          URL4="${{ env.REGISTRY_ROOT_URL }}/TheGraphNetworksRegistry_v${MAJOR}_${MINOR}_${PATCH}.json"

          RELEASE_BODY="### Networks Registry ${TAG}\n- ${URL1}\n- ${URL2}\n- ${URL3}\n- ${URL4}"

          # Create release with the URLs in the body
          RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases"
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d "{\"tag_name\": \"$TAG\", \"name\": \"$TAG\", \"body\": \"$RELEASE_BODY\"}" \
              "$RELEASE_URL" || { echo "Error: Failed to create GitHub release"; exit 1; }
    env:
      THEGRAPH_STUDIO_KEY: ${{ secrets.THEGRAPH_STUDIO_KEY }}
      REGISTRY_ROOT_URL: "https://graphregistry.pages.dev"
